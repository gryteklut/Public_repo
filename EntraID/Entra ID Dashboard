{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "<img src=\"%YourURLHere%\" height=\"100\")>\r\n\r\n## Entra ID Dashboard"
      },
      "name": "Header Text"
    },
    {
      "type": 1,
      "content": {
        "json": "-----------"
      },
      "name": "Filter Rule Split"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "c0b64833-fa80-4ad8-a893-a610db6ff202",
            "cellValue": "Tab",
            "linkTarget": "parameter",
            "linkLabel": "Summary",
            "subTarget": "Summary",
            "style": "link"
          },
          {
            "id": "0c2b23a2-1fd6-4fd3-a8cb-656e244b0064",
            "cellValue": "Tab",
            "linkTarget": "parameter",
            "linkLabel": "SignIns",
            "subTarget": "SignIns",
            "style": "link"
          },
          {
            "id": "7c18a79f-2bbe-408b-8353-a4247f123881",
            "cellValue": "Tab",
            "linkTarget": "parameter",
            "linkLabel": "IdentityProtection",
            "subTarget": "IdentityProtection",
            "style": "link"
          },
          {
            "id": "4aed2022-8cd8-44c8-babb-0f5a5128b71a",
            "cellValue": "Tab",
            "linkTarget": "parameter",
            "linkLabel": "MFAgaps",
            "subTarget": "MFAgaps",
            "style": "link"
          },
          {
            "id": "58fc11f9-3899-4907-a569-a62f6f41a4a8",
            "cellValue": "Tab",
            "linkTarget": "parameter",
            "linkLabel": "AppAudit",
            "subTarget": "AppAudit",
            "style": "link"
          },
          {
            "id": "fdc4f110-5525-42f5-93b1-0f6cfd0eb8ac",
            "cellValue": "Tab",
            "linkTarget": "parameter",
            "linkLabel": "Legacy",
            "subTarget": "Legacy",
            "style": "link"
          }
        ]
      },
      "name": "Tabs"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "1795c5d2-7fb6-4326-b965-f50b73f6151e",
                  "version": "KqlParameterItem/1.0",
                  "name": "timeRange",
                  "label": "Time Range",
                  "type": 4,
                  "description": "Please set a time range to view sign-ins",
                  "isRequired": true,
                  "value": {
                    "durationMs": 2592000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ],
                    "allowCustom": true
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "4cfc7982-f6f1-4570-937a-6f19cf1a45ec",
                  "version": "KqlParameterItem/1.0",
                  "name": "Workspace",
                  "type": 5,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "resourceTypeFilter": {
                      "microsoft.operationalinsights/workspaces": true
                    },
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 604800000
                  }
                },
                {
                  "id": "3157f4af-c193-4d76-9f26-f71c93d6c392",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterDQ",
                  "type": 10,
                  "isRequired": true,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[\\\"Yes\\\", \\\"No\\\"]\",\"transformers\":null}",
                  "value": "Yes",
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 8,
                  "label": "Filter Graph Requests"
                },
                {
                  "id": "44a14eb3-f106-4b86-ab2f-dbc9d68173f1",
                  "version": "KqlParameterItem/1.0",
                  "name": "Apps",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity != \"00000002-0000-0000-c000-000000000000\") or (\"{FilterDQ}\" != \"Yes\")\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize SingleFactorCount=countif(AuthenticationRequirement == \"singleFactorAuthentication\") by AppDisplayName\r\n| order by SingleFactorCount desc, AppDisplayName asc\r\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', SingleFactorCount, ' single factor sign-ins'), Selected = false\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "e19de9c8-90a7-4023-9019-74d01441827a",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterLegacy",
                  "label": "Legacy Authentication",
                  "type": 2,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\"All\", \"Only Legacy Authentications\", \"Not Legacy Authentications\"]",
                  "timeContext": {
                    "durationMs": 1209600000
                  },
                  "timeContextFromParameter": "timeRange",
                  "value": "All"
                },
                {
                  "id": "00bcb57b-3073-43ae-9247-46e710e90132",
                  "version": "KqlParameterItem/1.0",
                  "name": "DeviceState",
                  "label": "Device State",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| where ResultType == 0\r\n| where AADTenantId == ResourceTenantId\r\n| extend deviceState = case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"])\r\n| distinct deviceState",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "9860a0e6-23f9-4738-9b75-20e94805b343",
                  "version": "KqlParameterItem/1.0",
                  "name": "TrustedLocation",
                  "label": "Trusted Location",
                  "type": 2,
                  "description": "Filter based on trusted location",
                  "isRequired": true,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[\\\"All\\\", \\\"Only Trusted Locations\\\", \\\"Not Trusted Locations\\\"]\",\"transformers\":null}",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 1209600000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 8,
                  "value": "All"
                },
                {
                  "id": "efe68cc3-eb8f-461c-afb0-72ede23dea14",
                  "version": "KqlParameterItem/1.0",
                  "name": "Users",
                  "label": "Scope to users",
                  "type": 2,
                  "description": "Scope the workbook for selected users",
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| where AADTenantId == ResourceTenantId\r\n| distinct UserDisplayName",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 8
            },
            "customWidth": "100",
            "name": "parameters - 2"
          },
          {
            "type": 1,
            "content": {
              "json": "\n\n## Entra ID Summary\n\nBelow are summaries of devices over the previous {TimeRange}.",
              "style": "success"
            },
            "name": "Trending Events",
            "styleSettings": {
              "padding": "20px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n|extend ParseLocation = parse_json(LocationDetails)\r\n| extend Country = iff(ParseLocation.countryOrRegion == '', 'Unknown', tostring(ParseLocation.countryOrRegion))\r\n| extend City = iff(ParseLocation.city == '', 'Unknown', tostring(ParseLocation.city))\r\n| extend State = iff(ParseLocation.state == '', 'Unknown', tostring(ParseLocation.state))\r\n| extend GeoCoord = ParseLocation.geoCoordinates\r\n| extend ParseGeoCoord = parse_json(GeoCoord)\r\n| extend Latitude = ParseGeoCoord.latitude\r\n| extend Longitude = ParseGeoCoord.longitude\r\n| project UserDisplayName, Location, Latitude, Longitude, City, State, Country\r\n| summarize Count = count() by City, State, Country",
              "size": 0,
              "showAnalytics": true,
              "title": "Sign-ins Heatmap",
              "timeContextFromParameter": "timeRange",
              "exportParameterName": "LocationDetail",
              "exportDefaultValue": "{ \"Name\":\"\", \"Type\":\"*\"}",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "map",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Sign-in Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Trend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Failure Count|Interrupt Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Success Rate",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "percent"
                      }
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "Name",
                  "expandTopLevel": false
                }
              },
              "mapSettings": {
                "locInfo": "CountryRegion",
                "locInfoColumn": "Country",
                "latitude": "Latitude",
                "longitude": "Longitude",
                "sizeSettings": "Count",
                "sizeAggregation": "Sum",
                "labelSettings": "City",
                "legendMetric": "Count",
                "numberOfMetrics": 20,
                "legendAggregation": "Sum",
                "itemColorSettings": {
                  "nodeColorField": "Count",
                  "colorAggregation": "Sum",
                  "type": "heatmap",
                  "heatmapPalette": "turquoise"
                }
              }
            },
            "customWidth": "49",
            "showPin": true,
            "name": "heatmap",
            "styleSettings": {
              "maxWidth": "49"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| project LocationDetails, AuthenticationRequirement\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize Count = count() by tostring(LocationDetails.countryOrRegion)",
              "size": 0,
              "title": "Number of sign-ins not protected by multi-factor authentication requirement by location",
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "map",
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "LocationDetails_countryOrRegion",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "Count",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "mapSettings": {
                "locInfo": "CountryRegion",
                "locInfoColumn": "LocationDetails_countryOrRegion",
                "sizeSettings": "Count",
                "sizeAggregation": "Sum",
                "legendMetric": "Count",
                "legendAggregation": "Sum",
                "itemColorSettings": {
                  "nodeColorField": "Count",
                  "colorAggregation": "Sum",
                  "type": "heatmap",
                  "heatmapPalette": "greenRed"
                }
              }
            },
            "customWidth": "49",
            "name": "query - 6",
            "styleSettings": {
              "maxWidth": "49"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| summarize Title=\"All SignIns\", Metric = count(), Type = \"sessions\", Order = 1\r\n| union\r\n(SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| summarize Title=\"Protected by MFA\", Metric = count(), Type = \"sessions\", Order = 2)| union\r\n(SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| where AuthenticationRequirement != \"multiFactorAuthentication\"\r\n| summarize Title=\"Not Protected by MFA\", Metric = count(), Type = \"sessions\", Order = 3)",
              "size": 4,
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Title",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Metric",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Type",
                  "formatter": 1
                },
                "showBorder": false,
                "sortCriteriaField": "Order",
                "sortOrderField": 1,
                "size": "auto"
              }
            },
            "customWidth": "49",
            "name": "query - 11",
            "styleSettings": {
              "maxWidth": "49"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| extend UserDisplayName = strcat(UserDisplayName, \" (\", UserPrincipalName, \")\")\r\n| project UserDisplayName, UserType, AppDisplayName, AuthenticationRequirement, AuthenticationMethodsUsed, AuthenticationDetails, AuthenticationProcessingDetails\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize Count = count() by UserDisplayName, UserType\r\n| sort by Count desc",
              "size": 0,
              "title": "Signins not protected by multi-factor auth requirement by user (top 10000)",
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "Count",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Count",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "50",
            "name": "query - 4"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "SummaryTab",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "\n\n## Sign-ins\n\nBelow are summaries of enrollments over the previous {TimeRange}.",
              "style": "success"
            },
            "name": "Trending Events",
            "styleSettings": {
              "padding": "20px"
            }
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "13f56671-7604-4427-a4d8-663f3da0cbc5",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 1209600000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000,
                        "createdTime": "2018-11-13T19:33:10.162Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 900000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1800000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 3600000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 14400000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 43200000,
                        "createdTime": "2018-11-13T19:33:10.164Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 86400000,
                        "createdTime": "2018-11-13T19:33:10.165Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 172800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 259200000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 604800000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 1209600000,
                        "createdTime": "2018-11-13T19:33:10.166Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      },
                      {
                        "durationMs": 2592000000,
                        "createdTime": "2018-11-13T19:33:10.167Z",
                        "isInitialTime": false,
                        "grain": 1,
                        "useDashboardTimeRange": false
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "3b5cc420-8ad8-4523-ba28-a54910756794",
                  "version": "KqlParameterItem/1.0",
                  "name": "Apps",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| summarize Count = count() by AppDisplayName\r\n| order by Count desc, AppDisplayName asc\r\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 10,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "f7f7970b-58c1-474f-9043-62243d2d4edd",
                  "version": "KqlParameterItem/1.0",
                  "name": "Users",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| summarize Count = count() by UserDisplayName\r\n| order by Count desc, UserDisplayName asc\r\n| project Value = UserDisplayName, Label = strcat(UserDisplayName, ' - ', Count, ' sign-ins'), Selected = false\r\n",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "limitSelectTo": 20,
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n|extend errorCode = Status.errorCode\r\n|extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", errorCode == 29200 ,\"Pending user action\", errorCode == 50019 ,\"Pending user action\", errorCode == 50076 ,\"Pending user action\",  errorCode == 50097 ,\"Pending user action\",  errorCode == 50158 ,\"Pending user action\",  errorCode == 165100 ,\"Pending user action\", \"Failure\");\r\ndata\r\n| summarize Count = count() by SigninStatus\r\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\r\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\r\n    on SigninStatus\r\n| project-away SigninStatus1, TimeGenerated\r\n| extend Status = SigninStatus\r\n| union (\r\n    data \r\n    | summarize Count = count() \r\n    | extend jkey = 1\r\n    | join kind=inner (data\r\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\r\n        | extend jkey = 1) on jkey\r\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \r\n)\r\n| order by Count desc\r\n\r\n\r\n\r\n",
              "size": 3,
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "Status",
              "exportParameterName": "SigninStatus",
              "exportDefaultValue": "*",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "SigninStatus",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 9,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "name": "query - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = SigninLogs\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\r\n| extend City = iff(LocationDetails.city == '', 'Unknown city', tostring(LocationDetails.city))\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\r\nlet countryData = data\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country\r\n| join kind=inner\r\n(\r\n    data\r\n   | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by  Country\r\n    | project-away TimeGenerated\r\n)\r\non Country\r\n| project Country, TotalCount, SuccessCount,FailureCount,InterruptCount,  Trend\r\n| order by TotalCount desc, Country asc;\r\ndata\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Country, City\r\n| join kind=inner\r\n(\r\n    data    \r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Country, City\r\n    | project-away TimeGenerated\r\n)\r\non Country, City\r\n| order by TotalCount desc, Country asc\r\n| project Country, City,TotalCount, SuccessCount,FailureCount,InterruptCount, Trend\r\n| join kind=inner\r\n(\r\n    countryData\r\n)\r\non Country\r\n| project Id = City, Name = City, Type = 'City', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = Country\r\n| union (countryData\r\n| project Id = Country, Name = Country, Type = 'Country', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = 'root')\r\n| order by ['Sign-in Count'] desc, Name asc",
              "size": 1,
              "showAnalytics": true,
              "title": "Sign-ins by Location",
              "timeContextFromParameter": "TimeRange",
              "exportParameterName": "LocationDetail",
              "exportDefaultValue": "{ \"Name\":\"\", \"Type\":\"*\"}",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Sign-in Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Trend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Failure Count|Interrupt Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Success Rate",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "percent"
                      }
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "Name",
                  "expandTopLevel": false
                },
                "sortBy": [
                  {
                    "itemKey": "Name",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Name",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "67",
            "showPin": true,
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let details = dynamic({LocationDetail});\r\nlet data = SigninLogs\r\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend Country = tostring(LocationDetails.countryOrRegion)\r\n| extend City = tostring(LocationDetails.city)\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n| where details.Type == '*' or (details.Type == 'Country' and Country == details.Name) or (details.Type == 'City' and City == details.Name);\r\ndata\r\n| top 200 by TimeGenerated desc\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n| project User = UserDisplayName, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '✔️', '❌'), ' ', SigninStatus), ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = errorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Result description'] = ResultDescription, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city, ['Time generated'] = TimeGenerated, Status, ['User principal name'] = UserPrincipalName\r\n\r\n",
              "size": 1,
              "showAnalytics": true,
              "title": "Location Sign-in details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Sign-in Status",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Result description",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Time generated",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "33",
            "name": "query - 8b"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs \r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend ErrorCode = tostring(Status.errorCode) \r\n| extend FailureReason = tostring(Status.failureReason) \r\n| where ErrorCode !in (\"0\",\"50058\",\"50148\",\"50140\", \"51006\", \"50059\", \"65001\", \"52004\", \"50055\", \"50144\",\"50072\", \"50074\", \"16000\",\"16001\", \"16003\", \"50127\", \"50125\", \"50129\",\"50143\", \"81010\", \"81014\", \"81012\", \"29200\", \"50019\", \"50076\", \"50097\", \"50158\", \"165100\") \r\n|summarize errCount = count() by ErrorCode, tostring(FailureReason)| sort by errCount\r\n|project ['❌ Error Code'] = ErrorCode, ['Reason']= FailureReason, ['Error Count'] = toint(errCount)",
              "size": 1,
              "showAnalytics": true,
              "title": "Summary of top errors",
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "❌ Error Code",
              "exportParameterName": "ErrorCode",
              "exportDefaultValue": "*",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Error Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "showIcon": true
                    }
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "50",
            "showPin": true,
            "name": "query - 5",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs \r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend ErrorCode = tostring(Status.errorCode) \r\n| extend FailureReason = Status.failureReason \r\n| where ErrorCode in (\"50058\",\"50148\",\"50140\", \"51006\", \"50059\", \"65001\", \"52004\", \"50055\", \"50144\",\"50072\", \"50074\", \"16000\",\"16001\", \"16003\", \"50127\", \"50125\", \"50129\",\"50143\", \"81010\", \"81014\", \"81012\", \"29200\", \"50019\", \"50076\", \"50097\", \"50158\", \"165100\") \r\n|summarize errCount = count() by ErrorCode, tostring(FailureReason)\r\n| sort by errCount\r\n|project ['❌ Error Code'] = ErrorCode, ['Reason'] = FailureReason, ['Interrupt Count'] = toint(errCount)",
              "size": 1,
              "showAnalytics": true,
              "title": "Summary of sign-ins waiting on user action",
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "❌ Error Code",
              "exportParameterName": "InterruptErrorCode",
              "exportDefaultValue": "*",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Interrupt Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange"
                    }
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "50",
            "showPin": true,
            "name": "query - 7",
            "styleSettings": {
              "maxWidth": "50"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n|extend ParseLocation = parse_json(LocationDetails)\r\n| extend Country = iff(ParseLocation.countryOrRegion == '', 'Unknown', tostring(ParseLocation.countryOrRegion))\r\n| extend City = iff(ParseLocation.city == '', 'Unknown', tostring(ParseLocation.city))\r\n| extend State = iff(ParseLocation.state == '', 'Unknown', tostring(ParseLocation.state))\r\n| extend GeoCoord = ParseLocation.geoCoordinates\r\n| extend ParseGeoCoord = parse_json(GeoCoord)\r\n| extend Latitude = ParseGeoCoord.latitude\r\n| extend Longitude = ParseGeoCoord.longitude\r\n| project UserDisplayName, Location, Latitude, Longitude, City, State, Country\r\n| summarize Count = count() by City, State, Country",
              "size": 2,
              "showAnalytics": true,
              "title": "Sign-ins Heatmap",
              "timeContextFromParameter": "TimeRange",
              "exportParameterName": "LocationDetail",
              "exportDefaultValue": "{ \"Name\":\"\", \"Type\":\"*\"}",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "map",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Sign-in Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Trend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Failure Count|Interrupt Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Success Rate",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "percent"
                      }
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "Name",
                  "expandTopLevel": false
                }
              },
              "mapSettings": {
                "locInfo": "CountryRegion",
                "locInfoColumn": "Country",
                "latitude": "Latitude",
                "longitude": "Longitude",
                "sizeSettings": "Count",
                "sizeAggregation": "Sum",
                "labelSettings": "City",
                "legendMetric": "Count",
                "numberOfMetrics": 20,
                "legendAggregation": "Sum",
                "itemColorSettings": {
                  "nodeColorField": "Count",
                  "colorAggregation": "Sum",
                  "type": "heatmap",
                  "heatmapPalette": "turquoise"
                }
              }
            },
            "customWidth": "100",
            "showPin": true,
            "name": "heatmap"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\r\nlet appData = data\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Os = tostring(DeviceDetail.operatingSystem)\r\n| where Os != ''\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Os = tostring(DeviceDetail.operatingSystem)\r\n    | project-away TimeGenerated) on Os\r\n| order by TotalCount desc, Os asc\r\n| project Os, TotalCount, SuccessCount, FailureCount, InterruptCount, Trend\r\n| serialize Id = row_number();\r\ndata\r\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \"Success\"), FailureCount = countif(SigninStatus == \"Failure\"), InterruptCount = countif(SigninStatus == \"Pending user action\") by Os = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser)\r\n| join kind=inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Os = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser)\r\n    | project-away TimeGenerated) on Os, Browser\r\n| order by TotalCount desc, Os asc\r\n| project Os, Browser, TotalCount, SuccessCount, FailureCount, InterruptCount, Trend\r\n| serialize Id = row_number(1000000)\r\n| join kind=inner (appData) on Os\r\n| project Id, Name = Browser, Type = 'Browser', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = Id1\r\n| union (appData \r\n    | project Id, Name = Os, Type = 'Operating System', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = -1)\r\n| order by ['Sign-in Count'] desc, Name asc",
              "size": 1,
              "showAnalytics": true,
              "title": "Sign-ins by Device",
              "timeContextFromParameter": "TimeRange",
              "exportParameterName": "DeviceDetail",
              "exportDefaultValue": "{ \"Name\":\"\", \"Type\":\"*\"}",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Sign-in Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Trend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Failure Count|Interrupt Count",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Success Rate",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "percent"
                      }
                    }
                  },
                  {
                    "columnMatch": "ParentId",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "idColumn": "Id",
                  "parentColumn": "ParentId",
                  "treeType": 0,
                  "expanderColumn": "Name",
                  "expandTopLevel": false
                }
              }
            },
            "customWidth": "67",
            "showPin": true,
            "name": "query - 9"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let details = dynamic({DeviceDetail});\r\nlet data = SigninLogs\r\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n|where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| extend errorCode = Status.errorCode\r\n| extend SigninStatus = case(errorCode == 0, \"Success\", errorCode == 50058, \"Pending user action\",errorCode == 50140, \"Pending user action\", errorCode == 51006, \"Pending user action\", errorCode == 50059, \"Pending user action\",errorCode == 65001, \"Pending user action\", errorCode == 52004, \"Pending user action\", errorCode == 50055, \"Pending user action\", errorCode == 50144, \"Pending user action\", errorCode == 50072, \"Pending user action\", errorCode == 50074, \"Pending user action\", errorCode == 16000, \"Pending user action\", errorCode == 16001, \"Pending user action\", errorCode == 16003, \"Pending user action\", errorCode == 50127, \"Pending user action\", errorCode == 50125, \"Pending user action\", errorCode == 50129, \"Pending user action\", errorCode == 50143, \"Pending user action\", errorCode == 81010, \"Pending user action\", errorCode == 81014, \"Pending user action\", errorCode == 81012 ,\"Pending user action\", \"Failure\")\r\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\r\n| extend Os = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser)\r\n| where details.Type == '*' or (details.Type == 'Operating System' and Os == details.Name) or (details.Type == 'Browser' and Browser == details.Name);\r\ndata\r\n| order by TimeGenerated desc\r\n| top 200 by TimeGenerated desc\r\n| extend TimeFromNow = now() - TimeGenerated\r\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n| project User = UserDisplayName, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '✔️', '❌'), ' ', SigninStatus), ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = errorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Result description'] = ResultDescription, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city, ['Time generated'] = TimeGenerated, Status, ['User principal name'] = UserPrincipalName\r\n\r\n",
              "size": 1,
              "showAnalytics": true,
              "title": "Device Sign-in details",
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Sign-in Status",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "App",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Error code",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Result type",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Result signature",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Result description",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Conditional access policies",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Conditional access status",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Operating system",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Browser",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Country or region",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "State",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "City",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Time generated",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "User principal name",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "33",
            "name": "query - 8 - Copy"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "SignIns"
      },
      "name": "SignIns",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "\n\n## MFA gaps",
              "style": "success"
            },
            "name": "Trending Events",
            "styleSettings": {
              "padding": "20px"
            }
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "1795c5d2-7fb6-4326-b965-f50b73f6151e",
                  "version": "KqlParameterItem/1.0",
                  "name": "timeRange",
                  "label": "Time Range",
                  "type": 4,
                  "description": "Please set a time range to view sign-ins",
                  "isRequired": true,
                  "value": {
                    "durationMs": 7776000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ],
                    "allowCustom": true
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "4cfc7982-f6f1-4570-937a-6f19cf1a45ec",
                  "version": "KqlParameterItem/1.0",
                  "name": "Workspace",
                  "type": 5,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "resourceTypeFilter": {
                      "microsoft.operationalinsights/workspaces": true
                    },
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 604800000
                  }
                },
                {
                  "id": "3157f4af-c193-4d76-9f26-f71c93d6c392",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterDQ",
                  "type": 10,
                  "isRequired": true,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[\\\"Yes\\\", \\\"No\\\"]\",\"transformers\":null}",
                  "value": "Yes",
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 8,
                  "label": "Filter Graph Requests"
                },
                {
                  "id": "44a14eb3-f106-4b86-ab2f-dbc9d68173f1",
                  "version": "KqlParameterItem/1.0",
                  "name": "Apps",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity != \"00000002-0000-0000-c000-000000000000\") or (\"{FilterDQ}\" != \"Yes\")\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize SingleFactorCount=countif(AuthenticationRequirement == \"singleFactorAuthentication\") by AppDisplayName\r\n| order by SingleFactorCount desc, AppDisplayName asc\r\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', SingleFactorCount, ' single factor sign-ins'), Selected = false\r\n",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "e19de9c8-90a7-4023-9019-74d01441827a",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterLegacy",
                  "label": "Legacy Authentication",
                  "type": 2,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\"All\", \"Only Legacy Authentications\", \"Not Legacy Authentications\"]",
                  "timeContext": {
                    "durationMs": 1209600000
                  },
                  "timeContextFromParameter": "timeRange",
                  "value": "All"
                },
                {
                  "id": "00bcb57b-3073-43ae-9247-46e710e90132",
                  "version": "KqlParameterItem/1.0",
                  "name": "DeviceState",
                  "label": "Device State",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| where ResultType == 0\r\n| where AADTenantId == ResourceTenantId\r\n| extend deviceState = case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"])\r\n| distinct deviceState",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "9860a0e6-23f9-4738-9b75-20e94805b343",
                  "version": "KqlParameterItem/1.0",
                  "name": "TrustedLocation",
                  "label": "Trusted Location",
                  "type": 2,
                  "description": "Filter based on trusted location",
                  "isRequired": true,
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[\\\"All\\\", \\\"Only Trusted Locations\\\", \\\"Not Trusted Locations\\\"]\",\"transformers\":null}",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 1209600000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 8,
                  "value": "All"
                },
                {
                  "id": "efe68cc3-eb8f-461c-afb0-72ede23dea14",
                  "version": "KqlParameterItem/1.0",
                  "name": "Users",
                  "label": "Scope to users",
                  "type": 2,
                  "description": "Scope the workbook for selected users",
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SigninLogs\r\n| where AADTenantId == ResourceTenantId\r\n| distinct UserDisplayName",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 8
            },
            "customWidth": "100",
            "name": "parameters - 2"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Summary"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| summarize Title=\"All SignIns\", Metric = count(), Type = \"sessions\", Order = 1\r\n| union\r\n(SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\r\n| summarize Title=\"Protected by MFA\", Metric = count(), Type = \"sessions\", Order = 2)| union\r\n(SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| where AuthenticationRequirement != \"multiFactorAuthentication\"\r\n| summarize Title=\"Not Protected by MFA\", Metric = count(), Type = \"sessions\", Order = 3)",
                    "size": 4,
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Metric",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Type",
                        "formatter": 1
                      },
                      "showBorder": false,
                      "sortCriteriaField": "Order",
                      "sortOrderField": 1,
                      "size": "auto"
                    }
                  },
                  "name": "query - 11"
                }
              ]
            },
            "name": "SummaryGroup"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let top9Apps = SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| project UserDisplayName, AppDisplayName, AuthenticationRequirement\r\n| summarize SingleFactorUsers=dcountif(UserDisplayName, AuthenticationRequirement == \"singleFactorAuthentication\") by AppDisplayName\r\n| where SingleFactorUsers > 0\r\n| sort by SingleFactorUsers desc, AppDisplayName asc\r\n| limit 9\r\n| project AppDisplayName;\r\nSigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| project UserDisplayName, AppDisplayName, AuthenticationRequirement, CorrelationId\r\n| extend AppDisplayName=iff(AppDisplayName in (top9Apps), AppDisplayName, \"All Other Apps\"), rank=iff(AppDisplayName in (top9Apps), 1, 10)\r\n| summarize SingleFactorUsers=dcountif(UserDisplayName, AuthenticationRequirement == \"singleFactorAuthentication\"), MultiFactorUsers=dcountif(UserDisplayName, AuthenticationRequirement != \"singleFactorAuthentication\") by AppDisplayName, rank\r\n| where SingleFactorUsers > 0\r\n| sort by rank asc, SingleFactorUsers desc\r\n| project AppDisplayName, SingleFactorUsers",
              "size": 0,
              "title": "Number of users signing-in not protected by multi-factor authentication requirement by application",
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "AppDisplayName",
              "exportParameterName": "apps",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "categoricalbar",
              "chartSettings": {
                "showLegend": true
              }
            },
            "customWidth": "50",
            "name": "numberOfUsersNotProtectedByApplication",
            "styleSettings": {
              "maxWidth": "50%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let top9Apps = SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| project UserDisplayName, AppDisplayName, AuthenticationRequirement\r\n| summarize SingleFactorUsers=dcountif(UserDisplayName, AuthenticationRequirement == \"singleFactorAuthentication\") by AppDisplayName\r\n| where SingleFactorUsers > 0\r\n| sort by SingleFactorUsers desc, AppDisplayName asc\r\n| limit 9\r\n| project AppDisplayName;\r\nSigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| project UserDisplayName, AppDisplayName, AuthenticationRequirement, CorrelationId\r\n| extend AppDisplayName=iff(AppDisplayName in (top9Apps), AppDisplayName, \"All Other Apps\"), rank=iff(AppDisplayName in (top9Apps), 1, 10)\r\n| summarize SingleFactorUsers=dcountif(UserDisplayName, AuthenticationRequirement == \"singleFactorAuthentication\"), MultiFactorUsers=dcountif(UserDisplayName, AuthenticationRequirement != \"singleFactorAuthentication\") by AppDisplayName, rank\r\n| where SingleFactorUsers > 0\r\n| sort by rank asc, SingleFactorUsers desc\r\n| extend SingleFactorUsersPercent=SingleFactorUsers*1.0/(SingleFactorUsers + MultiFactorUsers)\r\n| project AppDisplayName, SingleFactorUsersPercent",
              "size": 0,
              "title": "Percent of users signing-in not protected by multi-factor authentication requirement by application",
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "AppDisplayName",
              "exportParameterName": "Apps",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "categoricalbar",
              "chartSettings": {
                "xAxis": "AppDisplayName",
                "showLegend": true,
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "percent",
                      "useGrouping": false,
                      "maximumFractionDigits": 0
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "percentOfUsersNotProtectedByApplication",
            "styleSettings": {
              "margin": "0px",
              "padding": "0px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where '*' in ({Users}) or UserDisplayName in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| extend UserDisplayName = strcat(UserDisplayName, \" (\", UserPrincipalName, \")\")\r\n| project UserDisplayName, UserType, AppDisplayName, AuthenticationRequirement\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize NotMfaCount=count() by AppDisplayName, UserDisplayName, UserType\r\n| order by NotMfaCount desc",
              "size": 0,
              "showAnalytics": true,
              "title": "Select an application and user to learn more",
              "noDataMessage": "There were no single factor authentication sign-ins in this time frame",
              "noDataMessageStyle": 3,
              "timeContextFromParameter": "timeRange",
              "exportedParameters": [
                {
                  "fieldName": "AppDisplayName",
                  "parameterName": "App"
                },
                {
                  "fieldName": "UserDisplayName",
                  "parameterName": "User",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "AppDisplayName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "count_",
                    "formatter": 5
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "AppDisplayName"
                  ]
                },
                "sortBy": [
                  {
                    "itemKey": "UserDisplayName",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "UserDisplayName",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "50",
            "name": "query - 3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| extend UserDisplayName = strcat(UserDisplayName, \" (\", UserPrincipalName, \")\")\r\n| project UserDisplayName, UserType, AppDisplayName, AuthenticationRequirement, AuthenticationMethodsUsed, AuthenticationDetails, AuthenticationProcessingDetails\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize Count = count() by UserDisplayName, UserType\r\n| sort by Count desc",
              "size": 0,
              "title": "Signins not protected by multi-factor auth requirement by user (top 10000)",
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "Count",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Count",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "50",
            "name": "query - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| project DeviceDetail, AuthenticationRequirement\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| extend Os=tostring(DeviceDetail.operatingSystem)\r\n| where isnotempty(Os)\r\n| summarize Count = count() by Os\r\n| order by Count desc",
              "size": 3,
              "title": "Number of signins not protected by multi-factor authentication requirement by operating system",
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "categoricalbar"
            },
            "customWidth": "50",
            "name": "query - 7",
            "styleSettings": {
              "maxWidth": "50%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| project DeviceDetail, AuthenticationRequirement\r\n| extend Os=tostring(DeviceDetail.operatingSystem)\r\n| summarize NotMfaCount = countif(AuthenticationRequirement == \"singleFactorAuthentication\"), Total=count() by Os\r\n| extend percent=(NotMfaCount*1.0)/Total\r\n| where NotMfaCount > 0\r\n| order by NotMfaCount desc\r\n| project Os, percent",
              "size": 3,
              "title": "Percent of signins not protected by multi-factor authentication requirement by operating system",
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "categoricalbar",
              "chartSettings": {
                "yAxis": [
                  "percent"
                ],
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 0,
                    "options": {
                      "style": "percent",
                      "useGrouping": false,
                      "maximumFractionDigits": 0
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "name": "query - 5 - Copy",
            "styleSettings": {
              "maxWidth": "50%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| where ResultType == 0 // Filter to sign-ins that are successful. No interrupts\r\n| where AADTenantId == ResourceTenantId // Filter out cross tenant resource access.\r\n| where array_length(ConditionalAccessPolicies) != 0 //bootstrap\r\n| where UserDisplayName in ({Users}) or '*' in ({Users})\r\n| where (\"{FilterDQ}\" == \"Yes\" and ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\")) or (\"{FilterDQ}\" != \"Yes\")\r\n| where AppDisplayName in ({Apps}) or '*' in ({Apps})\r\n| where '*' in ({DeviceState}) or case(DeviceDetail[\"trustType\"] == \"\", \"Unmanaged\", DeviceDetail[\"trustType\"]) in ({DeviceState})\r\n| where (\"{FilterLegacy}\" == \"Only Legacy Authentications\" and (ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\")) or (\"{FilterLegacy}\" != \"Only Legacy Authentications\")\r\n| where (\"{TrustedLocation}\" == \"Only Trusted Locations\" and NetworkLocationDetails contains \"trustedNamedLocation\") or (\"{TrustedLocation}\" != \"Only Trusted Locations\")\r\n| project LocationDetails, AuthenticationRequirement\r\n| where AuthenticationRequirement == \"singleFactorAuthentication\"\r\n| summarize Count = count() by tostring(LocationDetails.countryOrRegion)",
              "size": 2,
              "title": "Number of sign-ins not protected by multi-factor authentication requirement by location",
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "map",
              "mapSettings": {
                "locInfo": "CountryRegion",
                "locInfoColumn": "LocationDetails_countryOrRegion",
                "sizeSettings": "Count",
                "sizeAggregation": "Sum",
                "legendMetric": "Count",
                "legendAggregation": "Sum",
                "itemColorSettings": {
                  "nodeColorField": "Count",
                  "colorAggregation": "Sum",
                  "type": "heatmap",
                  "heatmapPalette": "greenRed"
                }
              }
            },
            "name": "query - 6"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "MFAgaps"
      },
      "name": "MFAgaps",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "\n\n## App audit",
              "style": "success"
            },
            "name": "Trending Events",
            "styleSettings": {
              "padding": "20px"
            }
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "f4d0d58a-e35f-4659-a490-5da142c9a6d2",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "label": "Time Range",
                  "type": 4,
                  "value": {
                    "durationMs": 2592000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "6b6b0bb3-667f-4fb8-9911-3b7f115c89ff",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserName",
                  "label": "User Name",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AuditLogs\r\n| where OperationName contains \"Consent\"\r\n// user name \r\n| extend initby = parse_json(InitiatedBy) | extend userinfo1 = initby.user | extend userinfo2 = parse_json(userinfo1) \r\n| extend username = userinfo2.userPrincipalName\r\n// app name \r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend appname = tostring(tr.displayName)\r\n| extend mp = tr.modifiedProperties | mvexpand mp\r\n| extend actinfo = mp.displayName\r\n// consent and scope information \r\n| extend value1 = parse_json(mp) | extend val1 = value1.newValue\r\n| where actinfo == \"ConsentAction.Permissions\"\r\n| parse val1 with * \"ResourceId:\" Resourceid1 \", ConsentType: \" ConsentType \", Scope:\" Scope \"]\" * \r\n| extend Scope1 = split(Scope, \" \")\r\n| mvexpand Scope1 \r\n| where Scope1 != \"\"\r\n| project OperationName , username, appname, actinfo, Resourceid1, ConsentType, Scope1, CorrelationId \r\n| project username = tostring(username) \r\n| distinct username\r\n| sort by username",
                  "crossComponentResources": [],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "c5bb7341-72dd-479b-b001-c58652ac709b",
                  "version": "KqlParameterItem/1.0",
                  "name": "AppName1",
                  "label": "App Name",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "(SigninLogs\r\n| extend corrIDTime = strcat(CorrelationId, TimeGenerated)\r\n| extend ConditionalAccessPolicies = tostring(ConditionalAccessPolicies)\r\n| extend DeviceDetail = tostring(DeviceDetail) \r\n| extend LocationDetails = tostring(LocationDetails) \r\n| extend Status = tostring(Status)\r\n| distinct AppDisplayName)\r\n| union \r\n\r\n(AuditLogs\r\n| where OperationName contains \"Consent\"\r\n// user name \r\n| extend initby = parse_json(InitiatedBy) | extend userinfo1 = initby.user | extend userinfo2 = parse_json(userinfo1) \r\n| extend username = userinfo2.userPrincipalName\r\n// app name \r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend appname = tostring(tr.displayName)\r\n| extend mp = tr.modifiedProperties | mvexpand mp\r\n| extend actinfo = mp.displayName\r\n// consent and scope information \r\n| extend value1 = parse_json(mp) | extend val1 = value1.newValue\r\n| where actinfo == \"ConsentAction.Permissions\"\r\n| parse val1 with * \"ResourceId:\" Resourceid1 \", ConsentType: \" ConsentType \", Scope:\" Scope \"]\" * \r\n| extend Scope1 = split(Scope, \" \")\r\n| mvexpand Scope1 \r\n| where Scope1 != \"\"\r\n| project AppDisplayName = appname\r\n| distinct AppDisplayName)\r\n| distinct AppDisplayName\r\n\r\n\r\n",
                  "crossComponentResources": [],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "56de0861-b28c-4408-9c22-6612b1bad38e",
                  "version": "KqlParameterItem/1.0",
                  "name": "ScopeName1",
                  "label": "Scope Name",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AuditLogs\r\n| where OperationName contains \"Consent\"\r\n// user name \r\n| extend initby = parse_json(InitiatedBy) | extend userinfo1 = initby.user | extend userinfo2 = parse_json(userinfo1) \r\n| extend username = userinfo2.userPrincipalName\r\n// app name \r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend appname = tostring(tr.displayName)\r\n| extend mp = tr.modifiedProperties | mvexpand mp\r\n| extend actinfo = mp.displayName\r\n// consent and scope information \r\n| extend value1 = parse_json(mp) | extend val1 = value1.newValue\r\n| where actinfo == \"ConsentAction.Permissions\"\r\n| parse val1 with * \"ResourceId:\" Resourceid1 \", ConsentType: \" ConsentType \", Scope:\" Scope \"]\" * \r\n| extend Scope1 = split(Scope, \" \")\r\n| mvexpand Scope1 \r\n| where Scope1 != \"\"\r\n| project Scope = tostring(Scope1)\r\n| distinct Scope\r\n",
                  "crossComponentResources": [],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "c1dfae76-fa0a-48c4-aa22-2006c098d8a5",
                  "version": "KqlParameterItem/1.0",
                  "name": "API_Name1",
                  "label": "API Name",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AuditLogs\r\n| where OperationName contains \"Consent\"\r\n// user name \r\n| extend initby = parse_json(InitiatedBy) | extend userinfo1 = initby.user | extend userinfo2 = parse_json(userinfo1) \r\n| extend username = userinfo2.userPrincipalName\r\n// app name \r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend appname = tostring(tr.displayName)\r\n| extend mp = tr.modifiedProperties | mvexpand mp\r\n| extend actinfo = mp.displayName\r\n// consent and scope information \r\n| extend value1 = parse_json(mp) | extend val1 = value1.newValue\r\n| where actinfo == \"ConsentAction.Permissions\"\r\n| parse val1 with * \"ResourceId:\" Resourceid1 \", ConsentType: \" ConsentType \", Scope:\" Scope \"]\" * \r\n| extend Scope1 = split(Scope, \" \")\r\n| mvexpand Scope1 \r\n| where Scope1 != \"\"\r\n//| project OperationName , username, appname, actinfo, Resourceid1, ConsentType, Scope1, CorrelationId \r\n| join kind = leftouter \r\n(\r\nAuditLogs\r\n| where OperationName contains \"oAuth2\"\r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend apiname = tostring(tr.displayName)\r\n| where apiname != \"\"\r\n| project OperationName , apiname , CorrelationId\r\n)\r\non $left.CorrelationId == $right.CorrelationId\r\n|distinct apiname\r\n| where apiname !=\"\"\r\n| sort by apiname\r\n",
                  "crossComponentResources": [],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "07ba0b97-f870-4238-a950-e3bf31fe8a6b",
                  "version": "KqlParameterItem/1.0",
                  "name": "Consent_Type1",
                  "label": "Consent Type",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "AuditLogs\r\n| where OperationName contains \"Consent\"\r\n// user name \r\n| extend initby = parse_json(InitiatedBy) | extend userinfo1 = initby.user | extend userinfo2 = parse_json(userinfo1) \r\n| extend username = userinfo2.userPrincipalName\r\n// app name \r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend appname = tostring(tr.displayName)\r\n| extend mp = tr.modifiedProperties | mvexpand mp\r\n| extend actinfo = mp.displayName\r\n// consent and scope information \r\n| extend value1 = parse_json(mp) | extend val1 = value1.newValue\r\n| where actinfo == \"ConsentAction.Permissions\"\r\n| parse val1 with * \"ResourceId:\" Resourceid1 \", ConsentType: \" ConsentType \", Scope:\" Scope \"]\" * \r\n| project ConsentType \r\n//| where ConsentType != \"\"\r\n|distinct ConsentType\r\n",
                  "crossComponentResources": [],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "100",
            "name": "parameters - 4",
            "styleSettings": {
              "margin": "0 0 15px 0"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\r\n| where OperationName contains \"Consent\"\r\n// user name \r\n| extend initby = parse_json(InitiatedBy) | extend userinfo1 = initby.user | extend userinfo2 = parse_json(userinfo1) \r\n| extend username = userinfo2.userPrincipalName\r\n// app name \r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend appname = tostring(tr.displayName)\r\n| extend mp = tr.modifiedProperties | mvexpand mp\r\n| extend actinfo = mp.displayName\r\n// consent and scope information \r\n| extend value1 = parse_json(mp) | extend val1 = value1.newValue\r\n| where actinfo == \"ConsentAction.Permissions\"\r\n| parse val1 with * \"ResourceId:\" Resourceid1 \", ConsentType: \" ConsentType \", Scope:\" Scope \"]\" * \r\n| extend Scope1 = split(Scope, \" \")\r\n| mvexpand Scope1 \r\n| where Scope1 != \"\"\r\n| project OperationName , username, appname, actinfo, Resourceid1, ConsentType, Scope1, CorrelationId\r\n| where username in ({UserName}) or '*' in  ({UserName})\r\n| where ConsentType in ({Consent_Type1}) or '*' in ({Consent_Type1})\r\n| where appname in ({AppName1}) or '*' in ({AppName1})\r\n| where Scope1 in ({ScopeName1}) or '*' in ({ScopeName1})\r\n| join kind = leftouter \r\n(\r\nAuditLogs\r\n| where OperationName contains \"oAuth2\"\r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend apiname = tostring(tr.displayName)\r\n| where apiname != \"\"\r\n| project OperationName , apiname , CorrelationId\r\n| where apiname in ({API_Name1}) or '*' in ({API_Name1})\r\n)\r\non $left.CorrelationId == $right.CorrelationId\r\n| join kind = leftouter\r\n(\r\nSigninLogs\r\n| summarize distinctUserSignInCount=dcount(UserId), signInCount=count() by AppDisplayName \r\n) \r\non $left.appname == $right.AppDisplayName\r\n//| extend api_scope = strcat(apiname, \" - \", Scope1) \r\n| extend Scope = tostring(Scope1)\r\n//| distinct Scope, appname, distinctUserSignInCount, signInCount, ConsentType \r\n| summarize Appcount=dcount(appname) by Scope\r\n| sort by Appcount desc\r\n",
              "size": 1,
              "showAnalytics": true,
              "title": "Scope by Unique App Consent Requests",
              "timeContext": {
                "durationMs": 2592000000
              },
              "exportFieldName": "Scope",
              "exportParameterName": "Scope_Bar",
              "exportDefaultValue": "'*'",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Appcount",
                    "formatter": 3,
                    "formatOptions": {
                      "min": 0,
                      "palette": "grayBlue",
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 100,
                "labelSettings": [
                  {
                    "columnId": "Scope",
                    "label": "Scope"
                  },
                  {
                    "columnId": "Appcount",
                    "label": "Appcount"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "query - 8"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AuditLogs\r\n| where OperationName contains \"Consent\"\r\n// user name \r\n| extend initby = parse_json(InitiatedBy) | extend userinfo1 = initby.user | extend userinfo2 = parse_json(userinfo1) \r\n| extend username = userinfo2.userPrincipalName\r\n// app name \r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend appname = tostring(tr.displayName)\r\n| extend mp = tr.modifiedProperties | mvexpand mp\r\n| extend actinfo = mp.displayName\r\n// consent and scope information \r\n| extend value1 = parse_json(mp) | extend val1 = value1.newValue\r\n| where actinfo == \"ConsentAction.Permissions\"\r\n| parse val1 with * \"ResourceId:\" Resourceid1 \", ConsentType: \" ConsentType \", Scope:\" Scope \"]\" * \r\n| extend Scope1 = split(Scope, \" \")\r\n| mvexpand Scope1 \r\n| where Scope1 != \"\"\r\n| project OperationName , username, appname, actinfo, Resourceid1, ConsentType, Scope1, CorrelationId \r\n| where username in ({UserName}) or '*' in  ({UserName})\r\n| where ConsentType in ({Consent_Type1}) or '*' in ({Consent_Type1})\r\n| where appname in ({AppName1}) or '*' in ({AppName1})\r\n| where Scope1 in ({ScopeName1}) or '*' in ({ScopeName1})\r\n| join kind = leftouter \r\n(\r\nAuditLogs\r\n| where OperationName contains \"oAuth2\"\r\n| extend tr = parse_json(TargetResources) | mvexpand tr | extend apiname = tostring(tr.displayName)\r\n| where apiname != \"\"\r\n| project OperationName , apiname , CorrelationId\r\n| where apiname in ({API_Name1}) or '*' in ({API_Name1})\r\n)\r\non $left.CorrelationId == $right.CorrelationId\r\n| join kind = leftouter\r\n(\r\nSigninLogs\r\n| summarize distinctUserSignInCount=dcount(UserId), signInCount=count() by AppDisplayName \r\n) \r\non $left.appname == $right.AppDisplayName\r\n| extend api_scope = tostring(Scope1), API = tostring(apiname) \r\n| distinct  appname, distinctUserSignInCount\r\n",
              "size": 1,
              "showAnalytics": true,
              "title": "Applications by Unique User Sign Ins",
              "timeContextFromParameter": "TimeRange",
              "exportFieldName": "appname",
              "exportParameterName": "appname",
              "exportDefaultValue": "*",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "distinctUserSignInCount",
                    "formatter": 3,
                    "formatOptions": {
                      "min": 0,
                      "palette": "grayBlue",
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 100,
                "labelSettings": [
                  {
                    "columnId": "appname",
                    "label": "appname"
                  },
                  {
                    "columnId": "distinctUserSignInCount",
                    "label": "distinctUserSignInCount"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "query - 0 - Copy"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "2ecf7153-2928-43d0-8159-ae085e546259",
                  "version": "KqlParameterItem/1.0",
                  "name": "UserDisplayName",
                  "label": "User Display Name",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "let SinginConsentTimes = SigninLogs\r\n| join kind = leftouter\r\n(\r\nSigninLogs\r\n|extend errorCode = Status.errorCode\r\n|where errorCode == 90094 \r\n|distinct CorrelationId \r\n)\r\non $left.CorrelationId == $right.CorrelationId\r\n| summarize maxTime = max(TimeGenerated) by CorrelationId, UserId\r\n| extend corrIDMaxTime = strcat(CorrelationId, maxTime)\r\n| project corrIDMaxTime;\r\nunion\r\nSigninLogs\r\n| extend corrIDTime = strcat(CorrelationId, TimeGenerated)\r\n| where corrIDTime in (SinginConsentTimes)\r\n| extend ConditionalAccessPolicies = tostring(ConditionalAccessPolicies)\r\n| extend DeviceDetail = tostring(DeviceDetail) \r\n| extend LocationDetails = tostring(LocationDetails) \r\n| extend Status = tostring(Status)\r\n| distinct UserDisplayName\r\n| sort by UserDisplayName\r\n\r\n\r\n",
                  "crossComponentResources": [],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let SinginConsentTimes = SigninLogs\r\n| join kind = inner\r\n(\r\nSigninLogs\r\n|extend errorCode = Status.errorCode\r\n|where errorCode == 90094 \r\n|distinct CorrelationId \r\n)\r\non $left.CorrelationId == $right.CorrelationId\r\n| summarize maxTime = max(TimeGenerated) by CorrelationId, UserId\r\n| extend corrIDMaxTime = strcat(CorrelationId, maxTime)\r\n| project corrIDMaxTime;\r\nSigninLogs\r\n| extend corrIDTime = strcat(CorrelationId, TimeGenerated)\r\n| where corrIDTime in (SinginConsentTimes)\r\n| project AppDisplayName, UserId, CorrelationId, ResultType, UserDisplayName\r\n| where AppDisplayName in ({AppName1}) or '*' in ({AppName1})\r\n| where UserDisplayName in ({UserDisplayName}) or '*' in ({UserDisplayName})\r\n//| summarize cnt = count() by ResultType\r\n//| extend SigninStatus = case(ResultType == 0, \"Success\", \"Failure\")\r\n//| summarize cnt = count() by AppDisplayName, SigninStatus\r\n| summarize TotalFlows = count(), TotalUsers = dcount(UserId) by AppDisplayName\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Count of access attempts where user needs admin consent for access",
              "noDataMessage": "There were no access attempts in the time range",
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TotalFlows",
                    "formatter": 3,
                    "formatOptions": {
                      "palette": "grayBlue",
                      "showIcon": true
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "AppDisplayName",
                    "label": "AppDisplayName"
                  },
                  {
                    "columnId": "TotalFlows",
                    "label": "TotalFlows"
                  }
                ]
              }
            },
            "name": "query - 11"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "AppAudit"
      },
      "name": "App Audit",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{mappedWorkspace}"
              ],
              "parameters": [
                {
                  "id": "7a2bb320-fa9c-45c8-bbf6-942c8b3a4b0e",
                  "version": "KqlParameterItem/1.0",
                  "name": "mappedSubscription",
                  "label": "subscription",
                  "type": 6,
                  "isRequired": true,
                  "value": null,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "01c6d66e-3f87-4e8a-8be6-0accbe4f4036",
                  "version": "KqlParameterItem/1.0",
                  "name": "mappedWorkspace",
                  "label": "workspace",
                  "type": 5,
                  "isRequired": true,
                  "query": "resources\r\n| where type == \"microsoft.operationalinsights/workspaces\"\r\n| where \"{mappedSubscription:subscriptionId}\" == subscriptionId\r\n| project id",
                  "crossComponentResources": [
                    "{mappedSubscription}"
                  ],
                  "value": null,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "03761a72-d969-426b-ba54-d1e709610b2d",
                  "version": "KqlParameterItem/1.0",
                  "name": "_WorkbookContext",
                  "label": "Workbook Context",
                  "type": 1,
                  "description": "Whether workbook is opened standalone or as part of the Hub.",
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "resultValType": "static",
                        "resultVal": "Focused"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Focused"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 4"
          },
          {
            "type": 1,
            "content": {
              "json": "Use Windows Update for Business reports to check the progress of Windows update deployments and report on devices with compliance issues. This data is updated every 24 hours."
            },
            "name": "IntroQualityUpdate"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nUCClient\r\n| where TimeGenerated == _SnapshotTime\r\n| summarize SecurityUpdateStatus = count() by OSSecurityUpdateStatus",
              "size": 3,
              "title": "Security update status",
              "noDataMessage": "No devices",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{mappedWorkspace}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TotalDevices",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "DevicesCount",
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "DevicesTakingFeatureUpdate",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "TotalDevices",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": ""
                      }
                    ]
                  }
                },
                "rightContent": {
                  "columnMatch": "TotalDevices",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "ViewDetails",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "WorkbookTemplate",
                    "linkIsContextBlade": true,
                    "workbookContext": {
                      "componentIdSource": "workbook",
                      "resourceIdsSource": "workbook",
                      "templateIdSource": "static",
                      "templateId": "community-workbooks/UpdateCompliance/KPI Card Detail",
                      "typeSource": "workbook",
                      "gallerySource": "workbook",
                      "locationSource": "default",
                      "passSpecificParams": true,
                      "templateParameters": [
                        {
                          "name": "mappedSubscription",
                          "source": "parameter",
                          "value": "mappedSubscription"
                        },
                        {
                          "name": "mappedWorkspace",
                          "source": "parameter",
                          "value": "mappedWorkspace"
                        },
                        {
                          "name": "Title",
                          "source": "static",
                          "value": "In Service feature update"
                        },
                        {
                          "name": "DataQuery",
                          "source": "static",
                          "value": " let _SnapshotTime = datetime({_SnapshotTime}); UCClient | where TimeGenerated == _SnapshotTime | where OSFeatureUpdateStatus == \"InService\"  | summarize by AzureADDeviceId, DeviceName, OSVersion, OSFeatureUpdateStatus"
                        }
                      ]
                    }
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "0",
            "name": "Security update status",
            "styleSettings": {
              "margin": "10px 10px",
              "padding": "0px",
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nUCClient\r\n| where TimeGenerated == _SnapshotTime\r\n| extend OSFeatureUpdateStatusModified = iff(OSFeatureUpdateStatus == \"Unknown\", \"Windows Insider Program\", OSFeatureUpdateStatus)\r\n| summarize FeatureUpdateStatus = count() by OSFeatureUpdateStatusModified",
              "size": 3,
              "title": "Feature update status",
              "noDataMessage": "No feature updates",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{mappedWorkspace}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "sortBy": [
                  {
                    "itemKey": "LatestComplianceStatus",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "LatestComplianceStatus",
                  "sortOrder": 1
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "DevicesCount",
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "DevicesTakingFeatureUpdate",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "OSSecurityUpdateStatus",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "3",
                        "text": ""
                      }
                    ]
                  }
                },
                "rightContent": {
                  "columnMatch": "TotalDevices",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "ViewDetails",
                  "formatter": 7,
                  "formatOptions": {
                    "linkTarget": "WorkbookTemplate",
                    "linkIsContextBlade": true,
                    "workbookContext": {
                      "componentIdSource": "workbook",
                      "resourceIdsSource": "workbook",
                      "templateIdSource": "static",
                      "templateId": "community-workbooks/UpdateCompliance/KPI Card Detail",
                      "typeSource": "workbook",
                      "gallerySource": "workbook",
                      "locationSource": "default",
                      "passSpecificParams": true,
                      "templateParameters": [
                        {
                          "name": "mappedSubscription",
                          "source": "parameter",
                          "value": "mappedSubscription"
                        },
                        {
                          "name": "mappedWorkspace",
                          "source": "parameter",
                          "value": "mappedWorkspace"
                        },
                        {
                          "name": "Title",
                          "source": "static",
                          "value": "End of Service feature update"
                        },
                        {
                          "name": "DataQuery",
                          "source": "static",
                          "value": "let _SnapshotTime = datetime({_SnapshotTime}); UCClient | where TimeGenerated == _SnapshotTime | where OSFeatureUpdateStatus == \"EndOfService\"  | summarize by AzureADDeviceId, DeviceName, OSVersion, OSFeatureUpdateStatus"
                        }
                      ]
                    }
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "0",
            "name": "OverallFeatureUpdateStatusChart",
            "styleSettings": {
              "margin": "10px 10px",
              "showBorder": true
            }
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "45ff6d41-655d-48b7-9887-aab0dbe5b78c",
                  "cellValue": "selTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Feature updates",
                  "subTarget": "FeatureUpdates",
                  "style": "link"
                },
                {
                  "id": "ebf24b8e-0a03-415d-9018-3bdd02138627",
                  "cellValue": "selTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Quality updates",
                  "subTarget": "QualityUpdates",
                  "style": "link"
                },
                {
                  "id": "f1304629-bf17-4448-8784-c3facb43a74c",
                  "cellValue": "selTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Delivery Optimization",
                  "subTarget": "DeliveryOptimization",
                  "style": "link"
                }
              ]
            },
            "name": "links - 3"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "The Feature Updates workbook provides information about the status of feature updates across all devices.\r\n\r\n\r\n*Note: A device can be in multiple deployments. The data here reflects devices that are taking updates across **all deployments***."
                  },
                  "name": "IntroQualityUpdate"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nUCClient\r\n| where TimeGenerated == _SnapshotTime\r\n| where OSFeatureUpdateStatus == \"InService\"\r\n| extend DevicesTakingFeatureUpdate = \"Installed with in service feature update\"\r\n| extend DevicesCount = \"Devices count\"\r\n| extend ViewDetails = \"View Details\"\r\n| summarize TotalDevices=count() by DevicesTakingFeatureUpdate, DevicesCount, ViewDetails\r\n\r\n",
                    "size": 3,
                    "title": "In Service feature update",
                    "noDataMessage": "No devices",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{mappedWorkspace}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TotalDevices",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "DevicesCount",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "DevicesTakingFeatureUpdate",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "TotalDevices",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": ""
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "TotalDevices",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "ViewDetails",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "WorkbookTemplate",
                          "linkIsContextBlade": true,
                          "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "community-workbooks/UpdateCompliance/KPI Card Detail",
                            "typeSource": "workbook",
                            "gallerySource": "workbook",
                            "locationSource": "default",
                            "passSpecificParams": true,
                            "templateParameters": [
                              {
                                "name": "mappedSubscription",
                                "source": "parameter",
                                "value": "mappedSubscription"
                              },
                              {
                                "name": "mappedWorkspace",
                                "source": "parameter",
                                "value": "mappedWorkspace"
                              },
                              {
                                "name": "Title",
                                "source": "static",
                                "value": "In Service feature update"
                              },
                              {
                                "name": "DataQuery",
                                "source": "static",
                                "value": " let _SnapshotTime = datetime({_SnapshotTime}); UCClient | where TimeGenerated == _SnapshotTime | where OSFeatureUpdateStatus == \"InService\"  | summarize by AzureADDeviceId, DeviceName, OSVersion, OSFeatureUpdateStatus"
                              }
                            ]
                          }
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "0",
                  "name": "In Service feature update",
                  "styleSettings": {
                    "margin": "10px 10px",
                    "padding": "0px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nUCClient\r\n| where TimeGenerated == _SnapshotTime\r\n| where OSFeatureUpdateStatus == \"EndOfService\"\r\n| extend DevicesTakingFeatureUpdate = \"Installed with out of service feature update\"\r\n| extend DevicesCount = \"Devices count\"\r\n| extend ViewDetails = \"View Details\"\r\n| summarize TotalDevices=count() by DevicesTakingFeatureUpdate, DevicesCount, ViewDetails\r\n",
                    "size": 3,
                    "title": "End of Service feature update",
                    "noDataMessage": "No feature updates",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{mappedWorkspace}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "sortBy": [
                        {
                          "itemKey": "LatestComplianceStatus",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "LatestComplianceStatus",
                        "sortOrder": 1
                      }
                    ],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "DevicesCount",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "DevicesTakingFeatureUpdate",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "OSSecurityUpdateStatus",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "3",
                              "text": ""
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "TotalDevices",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "ViewDetails",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "WorkbookTemplate",
                          "linkIsContextBlade": true,
                          "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "community-workbooks/UpdateCompliance/KPI Card Detail",
                            "typeSource": "workbook",
                            "gallerySource": "workbook",
                            "locationSource": "default",
                            "passSpecificParams": true,
                            "templateParameters": [
                              {
                                "name": "mappedSubscription",
                                "source": "parameter",
                                "value": "mappedSubscription"
                              },
                              {
                                "name": "mappedWorkspace",
                                "source": "parameter",
                                "value": "mappedWorkspace"
                              },
                              {
                                "name": "Title",
                                "source": "static",
                                "value": "End of Service feature update"
                              },
                              {
                                "name": "DataQuery",
                                "source": "static",
                                "value": "let _SnapshotTime = datetime({_SnapshotTime}); UCClient | where TimeGenerated == _SnapshotTime | where OSFeatureUpdateStatus == \"EndOfService\"  | summarize by AzureADDeviceId, DeviceName, OSVersion, OSFeatureUpdateStatus"
                              }
                            ]
                          }
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "0",
                  "name": "End of Service feature update",
                  "styleSettings": {
                    "margin": "10px 10px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nlet maxTimeGenerated = UCClient | where _SnapshotTime >= ago(30d)| summarize max(_SnapshotTime);\r\nlet warningBarrier = 6;\r\nlet today = now();\r\nUCClient\r\n| where TimeGenerated == _SnapshotTime\r\n| extend Status=iff(OSFeatureUpdateStatus has 'InService', iff(OSFeatureUpdateStatus has 'EndOfService', 'Unknown', 'InService'), iff(OSFeatureUpdateStatus has 'EndOfService', 'Unknown', 'InService'))\r\n| where Status != \"Unknown\" and OSVersion  != \"Windows Insider Program\"\r\n| extend diff = datetime_diff('month', OSFeatureUpdateEOSTime, today)\r\n| where diff <= warningBarrier and diff > 0\r\n| extend Compliant = \"Nearing EOS\"\r\n| extend Title = \"Near to end of support\"\r\n| extend Subtitle = \"Ending support within 6 months\"\r\n| extend ViewDetails = \"View Details\"\r\n| summarize Devices=count() by Compliant, Title, Subtitle, ViewDetails;\r\n",
                    "size": 3,
                    "title": "Nearing EOS",
                    "noDataMessage": "No devices ending service soon",
                    "noDataMessageStyle": 5,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{mappedWorkspace}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SecurityUpdateStatus",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Subtitle",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "2",
                              "text": ""
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Devices",
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "ViewDetails",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "WorkbookTemplate",
                          "linkIsContextBlade": true,
                          "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "community-workbooks/UpdateCompliance/KPI Card Detail",
                            "typeSource": "workbook",
                            "gallerySource": "workbook",
                            "locationSource": "default",
                            "passSpecificParams": true,
                            "templateParameters": [
                              {
                                "name": "mappedSubscription",
                                "source": "parameter",
                                "value": "mappedSubscription"
                              },
                              {
                                "name": "mappedWorkspace",
                                "source": "parameter",
                                "value": "mappedWorkspace"
                              },
                              {
                                "name": "Title",
                                "source": "static",
                                "value": "Devices nearing end of service within 6 months"
                              },
                              {
                                "name": "DataQuery",
                                "source": "static",
                                "value": "let _SnapshotTime = datetime({_SnapshotTime}); let maxTimeGenerated = UCClient | where _SnapshotTime >= ago(30d)| summarize max(_SnapshotTime); let warningBarrier = 6; let today = now(); UCClient | where TimeGenerated == _SnapshotTime | extend Status=iff(OSFeatureUpdateStatus has 'InService', iff(OSFeatureUpdateStatus has 'EndOfService', 'Unknown', 'InService'), iff(OSFeatureUpdateStatus has 'EndOfService', 'Unknown', 'InService')) | where Status != \"Unknown\" and OSVersion  != \"Windows Insider Program\" | extend diff = datetime_diff('month', OSFeatureUpdateEOSTime, today) | where diff <= warningBarrier and diff > 0 | summarize by AzureADDeviceId, DeviceName, OSVersion, OSFeatureUpdateStatus, OSFeatureUpdateEOSTime;"
                              }
                            ]
                          }
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "0",
                  "name": "EOSStatus - Copy",
                  "styleSettings": {
                    "margin": "10px 10px",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nlet UpdateAlert = UCUpdateAlert\r\n| where TimeGenerated == _SnapshotTime\r\n| where UpdateCategory==\"WindowsFeatureUpdate\"\r\n| where AlertStatus == \"Active\";\r\nUpdateAlert\r\n| where AlertStatus == \"Active\"\r\n| extend Title=\"Alerts count\", Subtitle = \"Update alerts\"\r\n| extend ViewDetails = \"View details\"\r\n| summarize count() by AlertStatus, Title, Subtitle, ViewDetails",
                    "size": 3,
                    "title": "Active alerts",
                    "noDataMessage": "No alerts",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{mappedWorkspace}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TotalAlerts",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Title"
                      },
                      "subtitleContent": {
                        "columnMatch": "Subtitle",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "TotalAlerts",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "3",
                              "text": ""
                            }
                          ]
                        }
                      },
                      "rightContent": {
                        "columnMatch": "count_",
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "ViewDetails",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "WorkbookTemplate",
                          "linkIsContextBlade": true,
                          "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "community-workbooks/UpdateCompliance/KPI Card Detail",
                            "typeSource": "workbook",
                            "gallerySource": "workbook",
                            "locationSource": "default",
                            "passSpecificParams": true,
                            "templateParameters": [
                              {
                                "name": "mappedSubscription",
                                "source": "parameter",
                                "value": "mappedSubscription"
                              },
                              {
                                "name": "mappedWorkspace",
                                "source": "parameter",
                                "value": "mappedWorkspace"
                              },
                              {
                                "name": "Title",
                                "source": "static",
                                "value": "Active alerts"
                              },
                              {
                                "name": "DataQuery",
                                "source": "static",
                                "value": "let _SnapshotTime = datetime({_SnapshotTime}); UCUpdateAlert | where TimeGenerated == _SnapshotTime | where AlertStatus == \"Active\" | where UpdateCategory == \"WindowsFeatureUpdate\" | summarize Devices=dcount(AzureADDeviceId) by ErrorCode, AlertSubtype, AlertClassification, AlertType, UpdateCategory, TargetBuild   | project-reorder AlertSubtype, AlertClassification, ErrorCode, TargetBuild, Devices, AlertType   | sort by Devices"
                              }
                            ]
                          }
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "0",
                  "name": "TotalAlerts",
                  "styleSettings": {
                    "margin": "10px 10px",
                    "showBorder": true
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "45ff6d41-655d-48b7-9887-aab0dbe5b78c",
                        "cellValue": "selTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Update status",
                        "subTarget": "UpdateStatus",
                        "style": "link"
                      },
                      {
                        "id": "ebf24b8e-0a03-415d-9018-3bdd02138627",
                        "cellValue": "selTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Device status",
                        "subTarget": "DeviceStatus",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 3"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nUCClientUpdateStatus\r\n| where TimeGenerated == _SnapshotTime\r\n| where UpdateCategory == \"WindowsFeatureUpdate\" \r\n| summarize count() by TargetVersion",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Target version",
                          "noDataMessage": "No devices",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{mappedWorkspace}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "createOtherGroup": null,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "",
                                "label": "Unknown"
                              },
                              {
                                "seriesName": "Installed",
                                "color": "blue"
                              },
                              {
                                "seriesName": "Installing",
                                "color": "turquoise"
                              },
                              {
                                "seriesName": "Offering",
                                "color": "blueDarkDark"
                              },
                              {
                                "seriesName": "Cancelled",
                                "color": "red"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "33",
                        "showPin": false,
                        "name": "TargetVersion"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nUCUpdateAlert\r\n| where TimeGenerated == _SnapshotTime\r\n| where UpdateCategory == \"WindowsFeatureUpdate\" and AlertSubtype == \"SafeguardHold\"\r\n| summarize count() by TargetVersion\r\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Safeguard holds",
                          "noDataMessage": "No safeguard holds",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{mappedWorkspace}"
                          ],
                          "visualization": "piechart",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "TargetVersion",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "yAxis": [
                              "count_"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Cancelling",
                                "label": "Unknown"
                              },
                              {
                                "seriesName": "",
                                "label": "Unknown"
                              },
                              {
                                "seriesName": "Installed",
                                "color": "blue"
                              },
                              {
                                "seriesName": "Installing",
                                "color": "turquoise"
                              },
                              {
                                "seriesName": "Cancelled",
                                "color": "red"
                              },
                              {
                                "seriesName": "Offering",
                                "color": "blueDarkDark"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "33",
                        "name": "SafeguardHolds"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nUCUpdateAlert \r\n| where TimeGenerated == _SnapshotTime\r\n| where AlertStatus == \"Active\" and UpdateCategory==\"WindowsFeatureUpdate\"  and TargetVersion != \"Windows Insider Program\"\r\n| summarize count() by AlertClassification\r\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Update alerts",
                          "noDataMessage": "No alerts",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{mappedWorkspace}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "",
                                "label": "Unknown"
                              },
                              {
                                "seriesName": "Error",
                                "color": "red"
                              },
                              {
                                "seriesName": "Warning",
                                "color": "orange"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "33",
                        "name": "Alerts(UpdateIssues)"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "customWidth": "33",
                        "name": "text - 6"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "66b8d4e6-db1b-412b-bcb9-bf87ab896472",
                              "linkTarget": "WorkbookTemplate",
                              "linkLabel": "View more details",
                              "style": "link",
                              "linkIsContextBlade": true,
                              "workbookContext": {
                                "componentIdSource": "workbook",
                                "resourceIdsSource": "workbook",
                                "templateIdSource": "static",
                                "templateId": "community-workbooks/UpdateCompliance/Safeguard hold view",
                                "typeSource": "workbook",
                                "gallerySource": "workbook",
                                "locationSource": "default"
                              }
                            }
                          ]
                        },
                        "customWidth": "33",
                        "name": "links - 7"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "<p style='font-weight:500'>Update deployment status</P>"
                        },
                        "name": "UpdateDeploymentStatusText",
                        "styleSettings": {
                          "margin": "0px 0px -20px 0px"
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{mappedWorkspace}"
                          ],
                          "parameters": [
                            {
                              "id": "5cd36655-0307-49d5-9b09-3e7a37514a9f",
                              "version": "KqlParameterItem/1.0",
                              "name": "_TargetVersion",
                              "label": "Target Version",
                              "type": 2,
                              "description": "Displays the target versions selected",
                              "isRequired": true,
                              "multiSelect": true,
                              "quote": "'",
                              "delimiter": ",",
                              "query": "UCClientUpdateStatus\r\n| where TimeGenerated >= datetime({_SnapshotTime})\r\n| where UpdateCategory == \"WindowsFeatureUpdate\" and isnotempty(TargetKBNumber) and TargetVersion != \"Windows Insider Program\"\r\n| summarize by TargetVersion",
                              "crossComponentResources": [
                                "{mappedWorkspace}"
                              ],
                              "value": null,
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "selectAllValue": "ALL",
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "Filters"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// intialitze filters\r\nlet _SnapshotTime = datetime({_SnapshotTime});\r\nlet _TargetVersion =\"{_TargetVersion}\";\r\n// declare constants\r\nlet KBLink = \"https://support.microsoft.com/help/\";\r\n// Prepare the subtables\r\nlet UCClientUpdateStatus_Info = UCClientUpdateStatus | where TimeGenerated == _SnapshotTime;                               \r\nlet UCUpdateAlert_Info = UCUpdateAlert | where TimeGenerated == _SnapshotTime;\r\n// Business logic _ResourceId\r\n// Filter the windows feature updates reatil builds\r\nlet AggregateDeviceCounts = UCClientUpdateStatus_Info \r\n| where UpdateCategory == \"WindowsFeatureUpdate\" and TargetVersion != \"Windows Insider Program\"\r\n| where iff(_TargetVersion has \"ALL\", true, _TargetVersion has tostring(TargetVersion))\r\n| summarize \r\n    TotalDevices=count(),\r\n    InstalledCount=dcountif(AzureADDeviceId, ClientState == \"Installed\") by TargetVersion, UpdateClassification\r\n| extend TotalProgress=round((InstalledCount * 1.0/ TotalDevices) * 100, 1);\r\n// prepate alert number for each target version aggreagre by error code\r\nlet AggregateAlertSubTypeCount = UCUpdateAlert_Info \r\n| where  UpdateCategory == \"WindowsFeatureUpdate\" and AlertStatus == \"Active\"\r\n| summarize Alerts=dcount(ErrorCode) by  TargetVersion, UpdateCategory, UpdateClassification;\r\n// join for final output\r\nAggregateDeviceCounts\r\n| join kind=leftouter (AggregateAlertSubTypeCount) on TargetVersion\r\n| summarize by TargetVersion,  TotalProgress, Alerts, TotalDevices, UpdateCategory, UpdateClassification\r\n| project-reorder TargetVersion, TotalProgress, Alerts, TotalDevices\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "noDataMessage": "No devices",
                          "exportedParameters": [
                            {
                              "fieldName": "TotalDevices",
                              "parameterName": "_SelectedDevices"
                            },
                            {
                              "fieldName": "TargetVersion",
                              "parameterName": "_SelectedTargetVersion",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "TargetBuild",
                              "parameterName": "_SelectedTargetBuild",
                              "parameterType": 1
                            }
                          ],
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{mappedWorkspace}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "TargetVersion",
                                "formatter": 0,
                                "formatOptions": {
                                  "aggregation": "Count"
                                }
                              },
                              {
                                "columnMatch": "TotalProgress",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue",
                                  "customColumnWidthSetting": "150px"
                                },
                                "numberFormat": {
                                  "unit": 1,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "Alerts",
                                "formatter": 18,
                                "formatOptions": {
                                  "linkTarget": "WorkbookTemplate",
                                  "linkIsContextBlade": false,
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": ">",
                                      "thresholdValue": "8",
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "is Empty",
                                      "thresholdValue": "",
                                      "representation": "Blank",
                                      "text": "0"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Blank",
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "community-workbooks/UpdateCompliance/Alerts for target build",
                                    "typeSource": "workbook",
                                    "gallerySource": "workbook",
                                    "locationSource": "default",
                                    "passSpecificParams": true,
                                    "templateParameters": [
                                      {
                                        "name": "_TotalAlerts",
                                        "source": "column",
                                        "value": "Alerts"
                                      },
                                      {
                                        "name": "_TargetVersion",
                                        "source": "column",
                                        "value": "TargetVersion"
                                      },
                                      {
                                        "name": "mappedSubscription",
                                        "source": "parameter",
                                        "value": "mappedSubscription"
                                      },
                                      {
                                        "name": "mappedWorkspace",
                                        "source": "parameter",
                                        "value": "mappedWorkspace"
                                      },
                                      {
                                        "name": "_UpdateReleaseTime",
                                        "source": "column",
                                        "value": "UpdateReleaseTime"
                                      },
                                      {
                                        "name": "_TargetKBNumber",
                                        "source": "column",
                                        "value": "TargetKBNumber"
                                      },
                                      {
                                        "name": "_TargetBuild",
                                        "source": "column",
                                        "value": "TargetBuild"
                                      },
                                      {
                                        "name": "_UpdateCategory",
                                        "source": "column",
                                        "value": "UpdateCategory"
                                      }
                                    ]
                                  }
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true
                                  }
                                }
                              },
                              {
                                "columnMatch": "TotalDevices",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "WorkbookTemplate",
                                  "linkIsContextBlade": false,
                                  "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "community-workbooks/UpdateCompliance/Target version",
                                    "typeSource": "workbook",
                                    "gallerySource": "workbook",
                                    "locationSource": "default",
                                    "passSpecificParams": true,
                                    "templateParameters": [
                                      {
                                        "name": "_TargetVersion",
                                        "source": "column",
                                        "value": "TargetVersion"
                                      },
                                      {
                                        "name": "_TargetBuild",
                                        "source": "column",
                                        "value": "TargetBuild"
                                      },
                                      {
                                        "name": "_DeviceCount",
                                        "source": "column",
                                        "value": "TotalDevices"
                                      },
                                      {
                                        "name": "_UpdateClassification",
                                        "source": "column",
                                        "value": "UpdateClassification"
                                      },
                                      {
                                        "name": "_DeploymentId",
                                        "source": "column",
                                        "value": "DeploymentId"
                                      },
                                      {
                                        "name": "_UpdateReleaseTime",
                                        "source": "column",
                                        "value": "UpdateReleaseTime"
                                      },
                                      {
                                        "name": "mappedWorkspace",
                                        "source": "parameter",
                                        "value": "mappedWorkspace"
                                      },
                                      {
                                        "name": "mappedSubscription",
                                        "source": "parameter",
                                        "value": "mappedSubscription"
                                      },
                                      {
                                        "name": "_UpdateCategory",
                                        "source": "column",
                                        "value": "UpdateCategory"
                                      },
                                      {
                                        "name": "_TargetKBNumber",
                                        "source": "column",
                                        "value": "TargetKBNumber"
                                      }
                                    ]
                                  },
                                  "bladeOpenContext": {
                                    "bladeName": "UsageNotebookBlade",
                                    "extensionName": "AppInsightsExtension",
                                    "bladeParameters": [
                                      {
                                        "name": "ComponentId",
                                        "source": "static",
                                        "value": ""
                                      },
                                      {
                                        "name": "ConfigurationId",
                                        "source": "static",
                                        "value": ""
                                      },
                                      {
                                        "name": "Type",
                                        "source": "static",
                                        "value": "workbook"
                                      },
                                      {
                                        "name": "WorkbookTemplateName",
                                        "source": "static",
                                        "value": "UC-QU-V2-DeviceList"
                                      },
                                      {
                                        "name": "_SelectedTargetVersion",
                                        "source": "column",
                                        "value": "TargetVersion"
                                      },
                                      {
                                        "name": "_SelectedTargetBuild",
                                        "source": "column",
                                        "value": "TargetBuild"
                                      }
                                    ]
                                  }
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": true
                                  }
                                }
                              },
                              {
                                "columnMatch": "UpdateClassification",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "UpdateCategory",
                                "formatter": 5,
                                "formatOptions": {
                                  "customColumnWidthSetting": "150px"
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          },
                          "sortBy": [],
                          "graphSettings": {
                            "type": 0,
                            "topContent": {
                              "columnMatch": "TargetVersion",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "Alerts",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "mapSettings": {
                            "locInfo": "LatLong",
                            "sizeSettings": "Alerts",
                            "sizeAggregation": "Sum",
                            "legendMetric": "Alerts",
                            "legendAggregation": "Sum",
                            "itemColorSettings": {
                              "type": "heatmap",
                              "colorAggregation": "Sum",
                              "nodeColorField": "Alerts",
                              "heatmapPalette": "greenRed"
                            }
                          }
                        },
                        "name": "UpdateDeploymentStatus",
                        "styleSettings": {
                          "margin": "-30px 0px 0px 0px"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selTab",
                    "comparison": "isEqualTo",
                    "value": "UpdateStatus"
                  },
                  "name": "UpdateDeploymentStatus"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nUCClientReadinessStatus\r\n| where TimeGenerated == _SnapshotTime\r\n| summarize count() by ReadinessStatus\r\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Windows 11 readiness status",
                          "noDataMessage": "No devices eligible for Windows 11",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{mappedWorkspace}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "showMetrics": false,
                            "showLegend": true,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "",
                                "label": "Unknown"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "33",
                        "name": "Windows11ReadinessStatus"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let _SnapshotTime = datetime({_SnapshotTime});\r\nUCDeviceAlert \r\n| where TimeGenerated == _SnapshotTime\r\n| where AlertStatus == \"Active\"\r\n| summarize count() by AlertClassification\r\n",
                          "size": 3,
                          "showAnalytics": true,
                          "title": "Device alerts",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{mappedWorkspace}"
                          ],
                          "visualization": "piechart",
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "",
                                "label": "Unknown"
                              },
                              {
                                "seriesName": "Warning",
                                "color": "orange"
                              }
                            ],
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "customWidth": "33",
                        "name": "Device Alerts"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// intialitze constants\r\nlet _SnapshotTime = datetime({_SnapshotTime});\r\n// Prepare the subtables\r\nlet UCClientUpdateStatus_Info = UCClientUpdateStatus | where TimeGenerated == _SnapshotTime;   \r\nlet UCUpdateAlert_Info = UCUpdateAlert | where TimeGenerated == _SnapshotTime | where AlertStatus == \"Active\";   \r\nlet UCDeviceAlert_Info = UCDeviceAlert | where TimeGenerated == _SnapshotTime | where AlertStatus == \"Active\";\r\nlet UCClient_Info = UCClient | where TimeGenerated == _SnapshotTime;\r\n//\r\nlet FeatureUpdateInfo = UCClientUpdateStatus_Info | where UpdateCategory == \"WindowsFeatureUpdate\" and TargetVersion != \"Windows Insider Program\" ;\r\n\r\nlet DeviceFeatureUpdateInfo = (FeatureUpdateInfo\r\n    | join kind=leftouter UCClient_Info on AzureADDeviceId\r\n    | project\r\n        AzureADDeviceId,\r\n        DeviceName,\r\n        UpdateCategory,\r\n        OSVersion,\r\n        OSBuild,\r\n        TargetVersion,\r\n        ClientState,\r\n        ClientSubstate);\r\n\r\nlet UpdateAlerts = (UCUpdateAlert_Info\r\n    | where UpdateCategory == \"WindowsFeatureUpdate\" and TargetVersion != \"Windows Insider Program\" \r\n    | summarize Alerts=count() by AzureADDeviceId);\r\n\r\nlet DeviceAlerts = (UCDeviceAlert_Info\r\n    | summarize Alerts=count() by AzureADDeviceId);\r\n\r\nlet Alerts = (UpdateAlerts\r\n| join kind=fullouter DeviceAlerts on AzureADDeviceId\r\n| extend TotalAlerts = iff(isempty(Alerts), 0, Alerts) + iff(isempty(Alerts1), 0, Alerts1)\r\n| summarize by AzureADDeviceId, TotalAlerts);\r\n\r\nDeviceFeatureUpdateInfo\r\n| join kind = leftouter (Alerts) on AzureADDeviceId\r\n| extend Name =  iff(isempty(DeviceName), \"---\", tostring(DeviceName))\r\n| sort by TotalAlerts desc\r\n| distinct\r\n    Name,\r\n    AzureADDeviceId,\r\n    OSVersion,\r\n    TargetVersion,\r\n    ClientState,\r\n    TotalAlerts,\r\n    UpdateCategory\r\n| project-reorder\r\n    Name,\r\n    AzureADDeviceId,\r\n    OSVersion,\r\n    TargetVersion,\r\n    ClientState,\r\n    TotalAlerts\r\n",
                          "size": 0,
                          "showAnalytics": true,
                          "title": "Device compliance status",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{mappedWorkspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Name",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "WorkbookTemplate",
                                  "linkIsContextBlade": true,
                                  "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "community-workbooks/UpdateCompliance/Device information",
                                    "typeSource": "workbook",
                                    "gallerySource": "workbook",
                                    "locationSource": "default",
                                    "passSpecificParams": true,
                                    "templateParameters": [
                                      {
                                        "name": "_AzureADDeviceId",
                                        "source": "column",
                                        "value": "AzureADDeviceId"
                                      },
                                      {
                                        "name": "mappedSubscription",
                                        "source": "parameter",
                                        "value": "mappedSubscription"
                                      },
                                      {
                                        "name": "mappedWorkspace",
                                        "source": "parameter",
                                        "value": "mappedWorkspace"
                                      },
                                      {
                                        "name": "_UpdateCategory",
                                        "source": "column",
                                        "value": "UpdateCategory"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "columnMatch": "Alerts",
                                "formatter": 1,
                                "formatOptions": {
                                  "linkTarget": "WorkbookTemplate",
                                  "linkIsContextBlade": true,
                                  "workbookContext": {
                                    "componentIdSource": "workbook",
                                    "resourceIdsSource": "workbook",
                                    "templateIdSource": "static",
                                    "templateId": "community-workbooks/UpdateCompliance/Alerts information",
                                    "typeSource": "workbook",
                                    "gallerySource": "workbook",
                                    "locationSource": "default",
                                    "passSpecificParams": true,
                                    "templateParameters": [
                                      {
                                        "name": "_AzureADDeviceId",
                                        "source": "column",
                                        "value": "AzureADDeviceId"
                                      },
                                      {
                                        "name": "mappedSubscription",
                                        "source": "parameter",
                                        "value": "mappedSubscription"
                                      },
                                      {
                                        "name": "mappedWorkspace",
                                        "source": "parameter",
                                        "value": "mappedWorkspace"
                                      },
                                      {
                                        "name": "_UpdateCategory",
                                        "source": "column",
                                        "value": "UpdateCategory"
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "columnMatch": "UpdateCategory",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "DeviceComplianceStatus"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selTab",
                    "comparison": "isEqualTo",
                    "value": "DeviceStatus"
                  },
                  "name": "DeviceStatus"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selTab",
              "comparison": "isEqualTo",
              "value": "FeatureUpdates"
            },
            "name": "Feature updates"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "template",
              "loadFromTemplateId": "community-workbooks/UpdateCompliance/Quality updates",
              "items": []
            },
            "conditionalVisibility": {
              "parameterName": "selTab",
              "comparison": "isEqualTo",
              "value": "QualityUpdates"
            },
            "name": "Quality Updates"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "template",
              "loadFromTemplateId": "community-workbooks/UpdateCompliance/DeliveryOptimization",
              "items": []
            },
            "conditionalVisibility": {
              "parameterName": "selTab",
              "comparison": "isEqualTo",
              "value": "DeliveryOptimization"
            },
            "name": "DeliveryOptimization"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "Update"
      },
      "name": "Windws update",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "d7eea88a-376f-45df-9339-8f064b529a35",
                  "version": "KqlParameterItem/1.0",
                  "name": "Workspace",
                  "type": 5,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "resourceTypeFilter": {
                      "microsoft.operationalinsights/workspaces": true
                    },
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "/subscriptions/73946027-4ab3-465b-af6c-66d4778c9b7c/resourceGroups/LogAnalytics/providers/Microsoft.OperationalInsights/workspaces/LogsAnalyticsNorth"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "30",
            "name": "parameters - 5"
          },
          {
            "type": 1,
            "content": {
              "json": "## Legacy authentication"
            },
            "name": "text - 0"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "51b55d19-33e1-4ce9-99e3-ef4ef8f392f1",
                  "cellValue": "interactive",
                  "linkTarget": "parameter",
                  "linkLabel": "User sign-ins (interactive)",
                  "subTarget": "yes",
                  "preText": "",
                  "style": "link"
                },
                {
                  "id": "2e1cc8a6-12b9-43e7-a108-15a9ad3d3365",
                  "cellValue": "interactive",
                  "linkTarget": "parameter",
                  "linkLabel": "User sign-ins (non-interactive)",
                  "subTarget": "no",
                  "style": "link"
                }
              ]
            },
            "name": "links - 2"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "e9e16a64-894c-4422-984e-0aa79948508e",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "label": "Time range",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 2592000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      }
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "95045f76-0a92-4c71-a043-b1ae94654c7a",
                  "version": "KqlParameterItem/1.0",
                  "name": "User",
                  "type": 1,
                  "value": "All users",
                  "label": "User principal name"
                },
                {
                  "id": "bc650409-aed8-4a57-858a-e66aae99fcbe",
                  "version": "KqlParameterItem/1.0",
                  "name": "Application",
                  "type": 1,
                  "value": "All applications"
                },
                {
                  "id": "fb794c49-1575-4d05-a587-2ac800991e47",
                  "version": "KqlParameterItem/1.0",
                  "name": "Status",
                  "type": 2,
                  "isRequired": true,
                  "value": "Success",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n    {\"value\": \"All\", \"label\": \"All\"},\r\n    {\"value\": \"Success\", \"label\": \"Success\"},\r\n    {\"value\": \"Failure\", \"label\": \"Failure\"}\r\n]"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| project TimeGenerated, UserPrincipalName, ClientAppUsed, Status, AppDisplayName, HomeTenantId, ResourceTenantId\r\n| where TimeGenerated {TimeRange:value}\r\n| where \"{User:escape}\" == \"All users\" or UserPrincipalName has \"{User:escape}\"\r\n| where \"{Application:escape}\" == \"All applications\" or AppDisplayName has \"{Application:escape}\"\r\n| extend status = case(Status.errorCode == 0, \"Success\", \"Failure\")\r\n| where \"{Status}\" == status or \"{Status}\" == \"All\"\r\n| where ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\"\r\n| where HomeTenantId == ResourceTenantId\r\n| extend Protocol = case(ClientAppUsed != \"\", ClientAppUsed, \"Unknown\")\r\n| summarize Users = dcount(UserPrincipalName) by AppDisplayName, Protocol\r\n| sort by Users desc",
              "size": 0,
              "showAnalytics": true,
              "exportedParameters": [
                {
                  "fieldName": "Protocol",
                  "parameterName": "clientSelected",
                  "parameterType": 1,
                  "defaultValue": "All"
                },
                {
                  "fieldName": "AppDisplayName",
                  "parameterName": "app",
                  "parameterType": 1,
                  "defaultValue": "All apps"
                }
              ],
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Protocol",
                    "formatter": 5
                  }
                ],
                "rowLimit": 10000,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Protocol"
                  ]
                }
              },
              "sortBy": []
            },
            "customWidth": "60",
            "conditionalVisibility": {
              "parameterName": "interactive",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "query - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| project TimeGenerated, ClientAppUsed, UserPrincipalName, Status, AppDisplayName, HomeTenantId, ResourceTenantId\r\n| where TimeGenerated {TimeRange:value}\r\n| where \"{User:escape}\" == \"All users\" or UserPrincipalName has \"{User:escape}\"\r\n| where \"{Application:escape}\" == \"All applications\" or AppDisplayName has \"{Application:escape}\"\r\n| where \"{app:escape}\" == \"All apps\" or AppDisplayName has \"{app:escape}\"\r\n| extend status = case(Status.errorCode == 0, \"Success\", \"Failure\")\r\n| where \"{Status}\" == status or \"{Status}\" == \"All\"\r\n| where ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\"\r\n| where HomeTenantId == ResourceTenantId\r\n| extend protocol = case(ClientAppUsed != \"\", ClientAppUsed, \"Unknown\")\r\n| where \"{clientSelected}\" == protocol or \"{clientSelected}\" == \"All\"\r\n| summarize SignIns = count() by UserPrincipalName\r\n| sort by SignIns desc",
              "size": 0,
              "showAnalytics": true,
              "exportFieldName": "UserPrincipalName",
              "exportParameterName": "user",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 10000,
                "filter": true
              }
            },
            "customWidth": "40",
            "conditionalVisibilities": [
              {
                "parameterName": "app",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "clientSelected",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "query - 6"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "SigninLogs\r\n| project TimeGenerated, ClientAppUsed, UserPrincipalName, Status, AppDisplayName, ResourceDisplayName, CorrelationId, City = tostring(LocationDetails.city), Country = tostring(LocationDetails.countryOrRegion), IPAddress, HomeTenantId, ResourceTenantId\r\n| where TimeGenerated {TimeRange:value}\r\n| where \"{User:escape}\" == \"All users\" or UserPrincipalName has \"{User:escape}\"\r\n| where \"{user:escape}\" == UserPrincipalName\r\n| where \"{Application:escape}\" == \"All applications\" or AppDisplayName has \"{Application:escape}\"\r\n| where \"{app:escape}\" == \"All apps\" or AppDisplayName has \"{app:escape}\"\r\n| extend status = case(Status.errorCode == 0, \"Success\", \"Failure\")\r\n| where \"{Status}\" == status or \"{Status}\" == \"All\"\r\n| where ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\"\r\n| where HomeTenantId == ResourceTenantId\r\n| extend Protocol = case(ClientAppUsed != \"\", ClientAppUsed, \"Unknown\")\r\n| where \"{clientSelected}\" == Protocol or \"{clientSelected}\" == \"All\"\r\n| project TimeGenerated, UserPrincipalName, Protocol, AppDisplayName, ResourceDisplayName, status, CorrelationId, City, Country, IPAddress\r\n| sort by TimeGenerated desc",
              "size": 0,
              "showAnalytics": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 10000
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "user",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "interactive",
                "comparison": "isEqualTo",
                "value": "yes"
              }
            ],
            "name": "query - 2"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "Legacy"
      },
      "name": "Legacy authentication",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AADNonInteractiveUserSignInLogs\r\n| project TimeGenerated, UserPrincipalName, ClientAppUsed, Status, AppDisplayName, HomeTenantId, ResourceTenantId\r\n| where TimeGenerated {TimeRange:value}\r\n| where \"{User:escape}\" == \"All users\" or UserPrincipalName has \"{User:escape}\"\r\n| where \"{Application:escape}\" == \"All applications\" or AppDisplayName has \"{Application:escape}\"\r\n| extend status = case(Status contains 'errorCode\":0', \"Success\", \"Failure\")\r\n| where \"{Status}\" == status or \"{Status}\" == \"All\"\r\n| where ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\"\r\n| where HomeTenantId == ResourceTenantId\r\n| extend Protocol = case(ClientAppUsed != \"\", ClientAppUsed, \"Unknown\")\r\n| summarize Users = dcount(UserPrincipalName) by Protocol, AppDisplayName\r\n| sort by Users desc",
        "size": 0,
        "showAnalytics": true,
        "exportedParameters": [
          {
            "fieldName": "Protocol",
            "parameterName": "clientSelected",
            "parameterType": 1,
            "defaultValue": "All"
          },
          {
            "fieldName": "AppDisplayName",
            "parameterName": "app",
            "parameterType": 1,
            "defaultValue": "All apps"
          }
        ],
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Protocol",
              "formatter": 5
            }
          ],
          "rowLimit": 10000,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Protocol"
            ]
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "interactive",
        "comparison": "isEqualTo",
        "value": "no"
      },
      "customWidth": "60",
      "name": "query - 1 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AADNonInteractiveUserSignInLogs\r\n| project TimeGenerated, ClientAppUsed, UserPrincipalName, Status, AppDisplayName, HomeTenantId, ResourceTenantId\r\n| where TimeGenerated {TimeRange:value}\r\n| where \"{User:escape}\" == \"All users\" or UserPrincipalName has \"{User:escape}\"\r\n| where \"{Application:escape}\" == \"All applications\" or AppDisplayName has \"{Application:escape}\"\r\n| where \"{app:escape}\" == \"All apps\" or AppDisplayName has \"{app:escape}\"\r\n| extend status = case(Status contains 'errorCode\":0', \"Success\", \"Failure\")\r\n| where \"{Status}\" == status or \"{Status}\" == \"All\"\r\n| where ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\"\r\n| where HomeTenantId == ResourceTenantId\r\n| extend clientApp = case(ClientAppUsed != \"\", ClientAppUsed, \"Unknown\")\r\n| where \"{clientSelected}\" == clientApp  or \"{clientSelected}\" == \"All\"\r\n| summarize SignIns = count() by UserPrincipalName\r\n| sort by SignIns desc",
        "size": 0,
        "showAnalytics": true,
        "exportFieldName": "UserPrincipalName",
        "exportParameterName": "user",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "gridSettings": {
          "rowLimit": 10000,
          "filter": true
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "interactive",
          "comparison": "isEqualTo",
          "value": "no"
        },
        {
          "parameterName": "app",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "clientSelected",
          "comparison": "isNotEqualTo"
        }
      ],
      "customWidth": "40",
      "name": "query - 6 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "AADNonInteractiveUserSignInLogs\r\n| project TimeGenerated, ClientAppUsed, UserPrincipalName, Status, AppDisplayName, ResourceDisplayName, CorrelationId, IPAddress, Location, HomeTenantId, ResourceTenantId\r\n| where TimeGenerated {TimeRange:value}\r\n| where \"{User:escape}\" == \"All users\" or UserPrincipalName has \"{User:escape}\"\r\n| where \"{user:escape}\" == UserPrincipalName\r\n| where \"{Application:escape}\" == \"All applications\" or AppDisplayName has \"{Application:escape}\"\r\n| where \"{app:escape}\" == \"All apps\" or AppDisplayName has \"{app:escape}\"\r\n| extend status = case(Status contains 'errorCode\":0', \"Success\", \"Failure\")\r\n| where \"{Status}\" == status or \"{Status}\" == \"All\"\r\n| where ClientAppUsed != \"Browser\" and ClientAppUsed != \"Mobile Apps and Desktop clients\"\r\n| where HomeTenantId == ResourceTenantId\r\n| extend Protocol = case(ClientAppUsed != \"\", ClientAppUsed, \"Unknown\")\r\n| where \"{clientSelected}\" == Protocol or \"{clientSelected}\" == \"All\"\r\n| project TimeGenerated, UserPrincipalName, Protocol, AppDisplayName, ResourceDisplayName, status, CorrelationId, IPAddress, Location\r\n| sort by TimeGenerated desc",
        "size": 0,
        "showAnalytics": true,
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "gridSettings": {
          "rowLimit": 10000
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "user",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "interactive",
          "comparison": "isEqualTo",
          "value": "no"
        }
      ],
      "name": "query - 2"
    }
  ],
  "fallbackResourceIds": [
    "/subscriptions/73946027-4ab3-465b-af6c-66d4778c9b7c/resourceGroups/LogAnalytics/providers/Microsoft.OperationalInsights/workspaces/LogsAnalyticsNorth"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
